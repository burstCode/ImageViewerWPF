<Application x:Class="ImageViewerWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ImageViewerWPF"
             StartupUri="StartWindow.xaml">
    <Application.Resources>

        <!-- Стиль для подствеки при драг энд дроп -->
        <Style x:Key="DragDropActiveWindow" TargetType="Window">
            <Setter Property="Background" Value="White"/>
            <Style.Triggers>
                <Trigger Property="local:DragAndDropHelper.IsDragOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                            To="#F0F0F0" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                            To="White" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для кнопок на стартовом окне -->
        <Style x:Key="StartWindowButton" TargetType="Button">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Inter"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Cursor" Value="Arrow"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="15"
                                SnapsToDevicePixels="True">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    
                                    <!-- Переход к обычному виду кнопки -->
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                            To="Black" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                            To="White" Duration="0:0:0.2"/>
                                            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
                                                                To="0" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                            To="Transparent" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>

                                    <!-- Анимация на наведение на кнопку -->
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                            To="White" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                            To="Black" Duration="0:0:0.2"/>
                                            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
                                                                To="2" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                            To="Black" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>

                                    <!-- Анимания на нажатие кнопки -->
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                            To="Black" Duration="0:0:0.1"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                            To="#DDDDDD" Duration="0:0:0.1"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                            To="Black" Duration="0:0:0.1"/>
                                            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
                                                            To="5" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для надписи "или перетащите в окно" -->
        <Style x:Key="DragAndDropTextBlock" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Inter" />
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0, 0, 0, 75" />
            <Setter Property="TextDecorations" Value="None"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsDragOver, RelativeSource={RelativeSource AncestorType=Window}}" 
                         Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                                               To="0,0,0,70" Duration="0:0:0.2"/>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" 
                                                       Value="{x:Static TextDecorations.Underline}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                                               To="0,0,0,75" Duration="0:0:0.2"/>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" 
                                                       Value="{x:Null}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
